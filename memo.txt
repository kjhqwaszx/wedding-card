< 환경 >
1. React, Scss
2. REST API: json-server ( https://www.npmjs.com/package/json-server )

< 폰트 & 비디오 포맷 >

- 비디오 포맷
  * MP4: 최신 웹 브라우저 대부분과 호환되는 인터넷 친화적인 비디오 포맷. 품질이 좋고 파일 크기가 작아 인기 있는 포맷임
  * WebM: 고화질 동영상을 손실없이 효과적으로 압축할 수 있는 고성능 비디오 포맷. (지원 브라우저가 제한적)
  -> WebM 과 MP4 포맷을 함께 사용할 수 있다. ( 브라우저가 WebM을 지원하지 않으면 MP4 포맷으로 )

< Search >
1. callBack, Promise, async & await

< 최적화 >

1. video 최적화
- 압축을 통해 영상의 크기를 줄인다.
( https://www.media.io/apps/compressor)
- webm 파일 타입으로 변경
( https://www.media.io/apps/converter )

video 태그를 통해 우선적으로 Webm 을 사용하고, 지원하지 않는 브라우저의 경우 mp4로 사용한다.
( /video)

2. 이미지 최적화
1. Webp 타입: 품질대비 이미지 용량이 적다.
- lighthouse 를 통해 웹 성능을 수치값으로 확인할 수 있다.
- https://squoosh.app 를 통해 이미지 파일을 압축할 수 있다.
- https://cloudinary.com > 클라우드 기반의 이미지 및 비디오 관리 서비스

picture 태그를 통해 우선적으로 Webp 을 먼저 사용하고, 지원하지 않는 브라우저는 jpeg를 적용한다.